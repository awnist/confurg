// Generated by CoffeeScript 1.6.2
(function() {
  var confurg, cwd, envCson, envJson, expect, home, homeCson, homeJson, path, projectCson, projectJson, sinon;

  expect = require('chai').expect;

  path = require('path');

  sinon = require('sinon');

  homeCson = path.resolve(path.join(__dirname, '../shared/cson/home'));

  homeJson = path.resolve(path.join(__dirname, '../shared/json/home'));

  projectCson = path.resolve(path.join(__dirname, '../shared/cson/project'));

  projectJson = path.resolve(path.join(__dirname, '../shared/json/project'));

  envCson = path.resolve(path.join(__dirname, '../shared/cson/env'));

  envJson = path.resolve(path.join(__dirname, '../shared/json/env'));

  home = process.env.HOME;

  cwd = confurg = path.resolve(path.join(__dirname, '../../src/confurg.coffee'));

  describe('confurg', function() {
    describe('namespace', function() {
      it('should fail when no namespace is supplied', function() {
        var fn;

        fn = function() {
          return require(confurg).init();
        };
        return expect(fn).to["throw"]();
      });
      return it('should not fail when a namespace is supplied', function() {
        var fn;

        fn = function() {
          return require(confurg).init('confurg');
        };
        return expect(fn).to.not["throw"]();
      });
    });
    return describe('cson', function() {
      return describe('home', function() {
        beforeEach(function() {
          return process.env.HOME = homeCson;
        });
        afterEach(function() {
          return process.env.HOME = home;
        });
        it('should load the home config file', function() {
          var config;

          process.chdir(project.Cson);
          config = require(confurg).init('confurg');
          console.log(config);
          expect(config.type).to.equal('cson');
          return expect(config.home).to.equal('default');
        });
        it('should override the home config file with new file with extension', function() {
          var config;

          config = require(confurg).init({
            namespace: 'confurg',
            home: path.join(homeCson, 'override.cson')
          });
          expect(config.type).to.equal('cson');
          return expect(config.home).to.equal('override');
        });
        it('should override the home config file with new file without extension', function() {
          var config;

          config = require(confurg).init({
            namespace: 'confurg',
            home: path.join(homeCson, 'override')
          });
          expect(config.type).to.equal('cson');
          return expect(config.home).to.equal('override');
        });
        return it('should override the home config file with object', function() {
          var config;

          config = require(confurg).init({
            namespace: 'confurg',
            home: {
              type: 'obj',
              home: 'obj'
            }
          });
          expect(config.type).to.equal('obj');
          return expect(config.home).to.equal('obj');
        });
      });
    });
  });

}).call(this);
