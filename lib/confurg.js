// Generated by CoffeeScript 1.4.0
(function() {
  var confurg, confurgFile, cson, fs, merge, optimist, path;

  fs = require('fs');

  path = require('path');

  cson = require('cson');

  optimist = require("optimist").argv;

  merge = require('tea-merge');

  confurgFile = function(file) {
    var e, _i, _len, _ref;
    _ref = ["cson", "json"];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      e = _ref[_i];
      if (fs.existsSync(file + "." + e)) {
        return cson.parseFileSync(file + "." + e);
      }
    }
  };

  confurg = module.exports = {
    init: function(settings, defaults) {
      var c, envs, key, matched, merged, re, val, _i, _len, _ref, _ref1, _ref2, _ref3;
      if (settings == null) {
        settings = {};
      }
      if (defaults == null) {
        defaults = {};
      }
      if (typeof settings === "string") {
        settings = {
          namespace: settings
        };
      }
      if (!((_ref = settings.namespace) != null ? _ref.match(/^\w+$/) : void 0)) {
        throw "Need namespace config parameter";
      }
      re = new RegExp("^" + settings.namespace + "_(\\w+)");
      envs = {};
      _ref1 = process.env;
      for (key in _ref1) {
        val = _ref1[key];
        if (matched = (_ref2 = key.match(re)) != null ? _ref2[1] : void 0) {
          envs[matched] = val;
        }
      }
      merged = {};
      _ref3 = [defaults, confurgFile(path.dirname(module.parent.filename) + "/config"), confurgFile(process.env.HOME + ("/." + settings.namespace)), envs, optimist];
      for (_i = 0, _len = _ref3.length; _i < _len; _i++) {
        c = _ref3[_i];
        if (typeof c === 'object') {
          merge(merged, c);
        }
      }
      return merged;
    }
  };

}).call(this);
